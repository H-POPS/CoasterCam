<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net45</TargetFramework>
    <LangVersion>latest</LangVersion>
    <RootNamespace>CoasterCam</RootNamespace>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Used as identifier in parkitect (-> IMod.Identifier) -->
    <Identifier>H-POPS@CoasterCam</Identifier>
    <!-- Used as name in parkitect(-> IMod.Name) and as AssemblyTitle and AssemblyProduct-->
    <Name>CoasterCam</Name>
    <!-- Used as description in parkitect (-> IMod.Description) and as AssemblyDescription -->
    <Description>Camera for riding coasters</Description>

    <!-- dll name -->
    <AssemblyName>ParkitectNexus@CoasterCam</AssemblyName>
    <!-- Output folder name in $(ModDir) -->
    <FolderName>$(AssemblyName)</FolderName>

    <!-- AssemblyCopyright -->
    <Copyright>Copyright © ParkitectNexus 2015</Copyright>
    <!-- AssemblyCompany -->
    <Company>ParkitectNexus</Company>

    <!-- If true: execute Parkitect.exe after build. For single build: dotnet build /p:StartParkitect=true -->
    <StartParkitect>true</StartParkitect>
    <!-- Starts Parkitect via steam. $(SteamExe) must be specified! -->
    <!-- Another advantage of starting via steam: otherwise msbuild waits for Parkitect to close -->
    <UseSteam>true</UseSteam>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Different on each system -->
    <ParkitectPath>D:\Games\steamapps\common\Parkitect</ParkitectPath>
    <ParkitectUserPath>C:\Users\Henrico\Documents\Parkitect</ParkitectUserPath>
    <SteamExe>C:\Games\Steam\Steam.exe</SteamExe>
  </PropertyGroup>

  <PropertyGroup>
    <ParkitectSteamId>453090</ParkitectSteamId>
  </PropertyGroup>

  <ItemGroup>
    <!--
      In Powershell (in $(ParkitectPath)/Parkitect_Data/Managed folder):
        $format = '<Reference Include="{0}">\n  <HintPath>$(ParkitectPath)/Parkitect_Data\Managed\{1}</HintPath>\n</Reference>'
        ls *.dll | % { [String]::Format($format, $_.BaseName, $_.Name) }
      + a bit manual cleanup
          (but still more references than necessary)
    -->
    <Reference Include="Parkitect">
      <HintPath>$(ParkitectPath)/Parkitect_Data\Managed\Parkitect.dll</HintPath>
    </Reference>
    <Reference Include="ThirdParty.dll">
      <HintPath>$(ParkitectPath)/Parkitect_Data\Managed\ThirdParty.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>$(ParkitectPath)/Parkitect_Data\Managed\UnityEngine.CoreModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.AudioModule">
      <HintPath>$(ParkitectPath)/Parkitect_Data\Managed\UnityEngine.AudioModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.InputLegacyModule">
      <HintPath>$(ParkitectPath)/Parkitect_Data\Managed\UnityEngine.InputLegacyModule.dll</HintPath>
    </Reference>
  </ItemGroup>

  <ItemGroup>
    <!-- Source: https://stuartlang.uk/adding-assemblymetadataattribute-using-new-sdk-project-with-msbuild/ -->
    <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute">
      <_Parameter1>Identifier</_Parameter1>
      <_Parameter2>$(Identifier)</_Parameter2>
    </AssemblyAttribute>
  </ItemGroup>
  <PropertyGroup>
    <ModDir>$(ParkitectUserPath)\Mods\$(FolderName)</ModDir>

    <AssemblyTitle>$(Name)</AssemblyTitle>
    <Product>$(Name)</Product>
  </PropertyGroup>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Delete Files="$(ModDir)/$(TargetFileName)" />
    <MakeDir Directories="$(ModDir)" />
    <Copy SourceFiles="$(TargetPath)" DestinationFiles="$(ModDir)/$(TargetFileName)" />
    <Delete Files="$(ModDir).zip" />
    <Exec Condition="$(ConfigurationName) == 'Release'" Command="7z a -r &quot;$(ModDir).zip&quot; &quot;$(ModDir)&quot;" />
  </Target>
  <Target Name="StartParkitect" AfterTargets="PostBuild" Condition="'$(StartParkitect)' == 'true'">
    <Exec Condition="'$(UseSteam)' != 'true'" Command="&quot;$(ParkitectPath)/Parkitect&quot;" />
    <Exec Condition="'$(UseSteam)' == 'true'" Command="&quot;$(SteamExe)&quot; -applaunch $(ParkitectSteamId)" />
  </Target>
</Project>